{"ast":null,"code":"import storageService from '@/service/storageService';\nimport userService from '@/service/userService';\nconst userModule = {\n  namespaced: true,\n  state: {\n    token: storageService.get(storageService.USER_TOKEN),\n    userInfo: storageService.get(storageService.USER_INFO) ? JSON.parse(storageService.get(storageService.USER_INFO)) : null //eslint-disable-line\n\n  },\n  mutations: {\n    SET_TOKEN(state, token) {\n      // 更新本地缓存\n      storageService.set(storageService.USER_TOKEN, token); // 更新state\n\n      state.token = token;\n    },\n\n    SET_USERINFO(state, userInfo) {\n      // 更新本地缓存\n      storageService.set(storageService.USER_INFO, JSON.stringify(userInfo)); // 更新state\n\n      state.userInfo = userInfo;\n    }\n\n  },\n  actions: {\n    register(context, {\n      name,\n      telephone,\n      password\n    }) {\n      return new Promise((resolve, reject) => {\n        userService.register({\n          name,\n          telephone,\n          password\n        }).then(res => {\n          // 保存token\n          context.commit('SET_TOKEN', res.data.data.token);\n          return userService.info();\n        }).then(res => {\n          //  保存用户信息\n          context.commit('SET_USERINFO', res.data.data.user);\n          resolve(res);\n        }).catch(err => {\n          reject(err);\n        });\n      });\n    },\n\n    login(context, {\n      telephone,\n      password\n    }) {\n      return new Promise((resolve, reject) => {\n        userService.login({\n          telephone,\n          password\n        }).then(res => {\n          // 保存token\n          context.commit('SET_TOKEN', res.data.data.token);\n          return userService.info();\n        }).then(res => {\n          //  保存用户信息\n          context.commit('SET_USERINFO', res.data.data.user);\n          resolve(res);\n        }).catch(err => {\n          reject(err);\n        });\n      });\n    },\n\n    logout({\n      commit\n    }) {\n      // 清除token\n      commit('SET_TOKEN', '');\n      storageService.set(storageService.USER_TOKEN, ''); // 清除用户信息\n\n      commit('SET_USERINFO', '');\n      storageService.set(storageService.USER_INFO, '');\n    }\n\n  }\n};\nexport default userModule;","map":{"version":3,"names":["storageService","userService","userModule","namespaced","state","token","get","USER_TOKEN","userInfo","USER_INFO","JSON","parse","mutations","SET_TOKEN","set","SET_USERINFO","stringify","actions","register","context","name","telephone","password","Promise","resolve","reject","then","res","commit","data","info","user","catch","err","login","logout"],"sources":["/Users/zhangsan/ginessentail-vue/src/store/module/user.js"],"sourcesContent":["import storageService from '@/service/storageService';\nimport userService from '@/service/userService';\n\nconst userModule = {\n    namespaced: true,\n    state: {\n        token: storageService.get(storageService.USER_TOKEN),\n        userInfo: storageService.get(storageService.USER_INFO) ? JSON.parse(storageService.get(storageService.USER_INFO)) : null, //eslint-disable-line\n    },\n\n    mutations: {\n        SET_TOKEN(state, token) {\n            // 更新本地缓存\n            storageService.set(storageService.USER_TOKEN, token);\n            // 更新state\n            state.token = token;\n        },\n        SET_USERINFO(state, userInfo) {\n            // 更新本地缓存\n            storageService.set(storageService.USER_INFO, JSON.stringify(userInfo));\n            // 更新state\n            state.userInfo = userInfo;\n        },\n    },\n\n    actions: {\n        register(context, { name, telephone, password }) {\n            return new Promise((resolve, reject) => {\n                userService.register({ name, telephone, password }).then((res) => {\n                    // 保存token\n                    context.commit('SET_TOKEN', res.data.data.token);\n                    return userService.info();\n                }).then((res) => {\n                    //  保存用户信息\n                    context.commit('SET_USERINFO', res.data.data.user);\n                    resolve(res);\n                }).catch((err) => {\n                    reject(err);\n                });\n            });\n        },\n        login(context, { telephone, password }) {\n            return new Promise((resolve, reject) => {\n                userService.login({ telephone, password }).then((res) => {\n                    // 保存token\n                    context.commit('SET_TOKEN', res.data.data.token);\n                    return userService.info();\n                }).then((res) => {\n                    //  保存用户信息\n                    context.commit('SET_USERINFO', res.data.data.user);\n                    resolve(res);\n                }).catch((err) => {\n                    reject(err);\n                });\n            });\n        },\n        logout({ commit }) {\n            // 清除token\n            commit('SET_TOKEN', '');\n            storageService.set(storageService.USER_TOKEN, '');\n            // 清除用户信息\n            commit('SET_USERINFO', '');\n            storageService.set(storageService.USER_INFO, '');\n        },\n    },\n};\nexport default userModule;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}