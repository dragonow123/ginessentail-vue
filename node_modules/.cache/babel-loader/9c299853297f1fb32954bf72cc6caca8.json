{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { required, minLength } from 'vuelidate/lib/validators';\nimport customValidator from '@/helper/validator';\nimport { mapActions } from 'vuex';\nexport default {\n  data() {\n    return {\n      user: {\n        telephone: '',\n        password: ''\n      }\n    };\n  },\n\n  validations: {\n    user: {\n      telephone: {\n        required,\n        telephone: customValidator.telephoneValidator\n      },\n      password: {\n        required,\n        minLength: minLength(6)\n      }\n    }\n  },\n  methods: { ...mapActions('userModule', {\n      userlogin: 'login'\n    }),\n\n    validationState(name) {\n      // 这里是es6 机构赋值\n      const {\n        $dirty,\n        $error\n      } = this.$v.user[name];\n      return $dirty ? !$error : null;\n    },\n\n    login() {\n      // 验证数据\n      this.$v.user.$touch();\n\n      if (this.$v.user.$anyError) {\n        return;\n      } // 请求api\n\n\n      this.userlogin(this.user).then(() => {\n        //跳转首页\n        this.$router.replace({\n          name: 'Home'\n        });\n      }).catch(err => {\n        this.$bvToast.toast(err.response.data.msg, {\n          title: '数据验证错误',\n          variant: 'danger',\n          solid: true\n        });\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;AACA;AAEA;EACAA;IACA;MACAC;QACAC,aADA;QAEAC;MAFA;IADA;EAMA,CARA;;EASAC;IACAH;MACAC;QACAG,QADA;QAEAH;MAFA,CADA;MAKAC;QACAE,QADA;QAEAC;MAFA;IALA;EADA,CATA;EAsBAC,WACA;MAAAC;IAAA,EADA;;IAEAC;MACA;MACA;QAAAC;QAAAC;MAAA;MACA;IACA,CANA;;IAOAC;MACA;MACA;;MACA;QACA;MACA,CALA,CAMA;;;MACA;QACA;QACA;UAAAC;QAAA;MACA,CAHA,EAGAC,KAHA,CAGAC;QACA;UACAC,eADA;UAEAC,iBAFA;UAGAC;QAHA;MAKA,CATA;IAUA;;EAxBA;AAtBA","names":["data","user","telephone","password","validations","required","minLength","methods","userlogin","validationState","$dirty","$error","login","name","catch","err","title","variant","solid"],"sourceRoot":"src/views/login","sources":["Login.vue"],"sourcesContent":["<template>\n  <div class=\"login\">\n    <b-row class=\"mt-5\">\n      <b-col md=\"8\" offset-md=\"2\" lg=\"6\" offset-lg=\"3\">\n    <b-card title=\"用户登录\">\n    <b-form>\n      <b-form-group label=\"手机号:\">\n        <b-form-input\n          v-model=\"$v.user.telephone.$model\"\n          type=\"number\"\n          placeholder=\"输入手机号\"\n          :state=\"validationState('telephone')\"\n        ></b-form-input>\n        <b-form-invalid-feedback :state=\"validationState('telephone')\">\n          手机号不符合要求\n        </b-form-invalid-feedback>\n      </b-form-group>\n      <b-form-group label=\"密码:\">\n        <b-form-input\n          v-model=\"$v.user.password.$model\"\n          type=\"password\"\n          placeholder=\"输入密码\"\n          :state=\"validationState('password')\"\n        ></b-form-input>\n        <b-form-invalid-feedback :state=\"validationState('password')\">\n          密码必须大于6位\n        </b-form-invalid-feedback>\n      </b-form-group>\n      <b-form-group>\n        <b-button @click=\"login\" variant=\"outline-primary\" block>登录</b-button>\n      </b-form-group>\n      </b-form>\n      </b-card>\n        </b-col>\n      </b-row>\n  </div>\n</template>\n<script>\nimport { required, minLength } from 'vuelidate/lib/validators';\nimport customValidator from '@/helper/validator';\nimport { mapActions } from 'vuex';\n\nexport default {\n  data() {\n    return {\n      user: {\n        telephone: '',\n        password: '',\n      },\n    };\n  },\n  validations: {\n    user: {\n      telephone: {\n        required,\n        telephone: customValidator.telephoneValidator,\n      },\n      password: {\n        required,\n        minLength: minLength(6),\n      },\n    },\n  },\n\n  methods: {\n    ...mapActions('userModule', { userlogin: 'login' }),\n    validationState(name) {\n      // 这里是es6 机构赋值\n      const {$dirty, $error} = this.$v.user[name];\n      return $dirty ? !$error : null;\n    }, \n    login() {\n      // 验证数据\n      this.$v.user.$touch();\n      if (this.$v.user.$anyError) {\n        return;\n      }\n      // 请求api\n      this.userlogin(this.user).then(() => {\n        //跳转首页\n        this.$router.replace({ name: 'Home' });\n      }).catch((err) => {\n        this.$bvToast.toast(err.response.data.msg, {\n          title: '数据验证错误',\n          variant: 'danger',\n          solid: true,\n        });\n      });\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n</style>\n"]},"metadata":{},"sourceType":"module"}